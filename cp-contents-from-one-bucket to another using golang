

package main

import (
    "github.com/aws/aws-sdk-go/aws"
    "github.com/aws/aws-sdk-go/aws/session"
    "github.com/aws/aws-sdk-go/service/s3"
    "fmt"
    "net/url"
    "os"
)

func main() {
    if len(os.Args) != 4 {
        exitErrorf("Bucket, item, and other bucket names required\nUsage: go run s3_copy_object bucket item other-bucket")
    }

    bucket := os.Args[1]
    item := os.Args[2]
    other := os.Args[3]

    source := bucket + "/" + item

    sess, err := session.NewSession(&aws.Config{
        Region: aws.String("us-east-2")},
    )

    
    svc := s3.New(sess)

    
    _, err = svc.CopyObject(&s3.CopyObjectInput{Bucket: aws.String(other),
        CopySource: aws.String(url.PathEscape(source)), Key: aws.String(item)})
    if err != nil {
        exitErrorf("Unable to copy item from bucket %q to bucket %q, %v", bucket, other, err)
    }
func exitErrorf(msg string, args ...interface{}) {
    fmt.Fprintf(os.Stderr, msg+"\n", args...)
    os.Exit(1)
}
